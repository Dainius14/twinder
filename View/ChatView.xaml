<Window x:Class="Twinder.View.ChatView"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
		xmlns:local="clr-namespace:Twinder.View"
		mc:Ignorable="d" 
        
		xmlns:p="clr-namespace:Twinder.Properties"
		xmlns:view="clr-namespace:Twinder.View"
		xmlns:vm="clr-namespace:Twinder.ViewModel"
		
		Activated="Window_Activated"
        
		MinWidth="350" MinHeight="250"
		Width="450" Height="500"
		Background="WhiteSmoke"
		DataContext="{Binding Chat, Source={StaticResource Locator}}"
		d:DataContext="{Binding SampleChat, Source={StaticResource Locator}}">

	<Window.Resources>

		<Style TargetType="TextBlock" x:Key="MatchName">
			<Setter Property="FontSize" Value="32"/>
			<Setter Property="FontFamily" Value="Segoe UI"/>
			<Setter Property="FontWeight" Value="Thin"/>
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="VerticalAlignment" Value="Bottom"/>
			<Setter Property="Margin" Value="5,0,0,0"/>
		</Style>

		<Style TargetType="TextBlock" x:Key="HeaderSubtext">
			<Setter Property="FontSize" Value="10"/>
			<Setter Property="FontFamily" Value="Segoe UI"/>
			<Setter Property="FontWeight" Value="Normal"/>
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="VerticalAlignment" Value="Bottom"/>
			<Setter Property="TextAlignment" Value="Right"/>
			<Setter Property="Margin" Value="5,0,5,3"/>
		</Style>

		<Style TargetType="Grid" x:Key="Header">
			<Setter Property="Background" Value="#1765ff"/>
			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Cursor" Value="Hand"/>
				</Trigger>
			</Style.Triggers>
		</Style>

		<Style TargetType="TextBox" x:Key="MessageToSend">
			<Setter Property="FontSize" Value="13"/>
			<Setter Property="FontFamily" Value="Segoe UI"/>
			<Setter Property="TextWrapping" Value="Wrap"/>
			<Setter Property="Background" Value="WhiteSmoke"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="Padding" Value="5,5,0,5"/>
		</Style>

		<Style TargetType="TextBlock" x:Key="SendButton">
			<Setter Property="FontSize" Value="14"/>
			<Setter Property="FontFamily" Value="Segoe UI"/>
			<Setter Property="FontWeight" Value="Bold"/>

			<Setter Property="Foreground" Value="#1765ff"/>

			<Setter Property="HorizontalAlignment" Value="Center"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="Padding" Value="10"/>

			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Cursor" Value="Hand"/>
					<Setter Property="Effect">
						<Setter.Value>
							<DropShadowEffect Color="#1765ff" Opacity="0.2" ShadowDepth="0"/>
						</Setter.Value>
					</Setter>

				</Trigger>
			</Style.Triggers>
		</Style>
		
	</Window.Resources>
	
	<Window.Title>
		<MultiBinding StringFormat="{}{0} {1} - {2}">
			<Binding Path="Match.Person.Name" />
			<Binding Source="{x:Static p:Resources.window_title_chat}"/>
			<Binding Source="{x:Static p:Resources.app_title}"/>
		</MultiBinding>
	</Window.Title>
	
	<DockPanel LastChildFill="True">
		
		<!-- Info bar -->
		<Grid DockPanel.Dock="Top" MouseDown="HeaderBar_MouseDown"
			  Style="{StaticResource Header}">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="60"/>
				<ColumnDefinition Width="auto"/>
			</Grid.ColumnDefinitions>

			
			<Image Loaded="Image_Loaded" RenderOptions.BitmapScalingMode="HighQuality"
				   Height="60"
				   Grid.Column="0"/>

			<Grid Grid.Column="1">
				<Grid.RowDefinitions>
					<RowDefinition Height="auto"/>
					<RowDefinition Height="auto"/>
				</Grid.RowDefinitions>
				
				<TextBlock Text="{Binding Match.Person.Name, FallbackValue='Name'}"
						   Style="{StaticResource MatchName}"
						   Grid.Row="0"/>

				<StackPanel Orientation="Horizontal" Grid.Row="1">
					
					<!-- Matched ... ago -->
					<TextBlock x:Name="MatchedAgo_TextBlock"
							   Text="{Binding MatchedAgo, StringFormat='{}Matched {0}'}"
							   Style="{StaticResource HeaderSubtext}"
							   Visibility="{Binding AreMatchedAndMessagedEqual,
								Converter={StaticResource BoolToVisibleConverter}, ConverterParameter='Inverse'}"/>

					<!-- Messaged ... ago -->
					<TextBlock x:Name="MessagedAgo_TextBlock"
							   Text="{Binding MessageAgo, StringFormat='{}Last message {0}'}"
							   Style="{StaticResource HeaderSubtext}"
							   Visibility="{Binding AreMatchedAndMessagedEqual,
								Converter={StaticResource BoolToVisibleConverter}, ConverterParameter='Inverse'}"/>

					<!-- Matched and messaged ... ago -->
					<TextBlock x:Name="MatchedAndMessagedAgo_TextBlock"
							   Text="{Binding MatchedAgo, StringFormat='{}Matched and last message {0}'}"
							   Style="{StaticResource HeaderSubtext}"
							   Visibility="{Binding AreMatchedAndMessagedEqual,
								Converter={StaticResource BoolToVisibleConverter}}"/>

				</StackPanel>
			</Grid>
			
		</Grid>

		<!-- Send message -->
		<Grid DockPanel.Dock="Bottom">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="auto"/>
			</Grid.ColumnDefinitions>

			<TextBox x:Name="SendMessage_TextBox"
					 Text="{Binding MessageToSend, UpdateSourceTrigger=PropertyChanged}"
					 Style="{StaticResource MessageToSend}"
					 Grid.Column="0">
				
				<TextBox.InputBindings>
					<KeyBinding Key="Enter" Command="{Binding SendMessageCommand}"/>
				</TextBox.InputBindings>
			</TextBox>

			<TextBlock Text="{x:Static p:Resources.chat_btn_send_message}"
					   Style="{StaticResource SendButton}"
					   Grid.Column="1">
				<TextBlock.InputBindings>
					<MouseBinding Command="{Binding SendMessageCommand}" MouseAction="LeftClick" />
				</TextBlock.InputBindings>
			</TextBlock>
			
		</Grid>

		<!-- Chat -->
		<ListView x:Name="Chat_ListView" ItemsSource="{Binding Match.Messages}"
				  HorizontalContentAlignment="Stretch"
				  VirtualizingPanel.ScrollUnit="Pixel"
				  BorderThickness="0,0,0,1"
				  Background="WhiteSmoke">
			<ListView.ItemTemplate>
				<DataTemplate>
					<view:ChatBubbleView Message="{Binding}"
										 Match="{Binding ElementName=Chat_ListView, Path=DataContext.Match}"/>
				</DataTemplate>
			</ListView.ItemTemplate>

			<ListView.ItemContainerStyle>
				<Style TargetType="ListViewItem">
					<Setter Property="Background" Value="Transparent" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ListViewItem}">
								<ContentPresenter />
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</ListView.ItemContainerStyle>

		</ListView>
	</DockPanel>
</Window>
