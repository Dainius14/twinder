<Window x:Class="Twinder.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
		
		xmlns:p="clr-namespace:Twinder.Properties"
		xmlns:view="clr-namespace:Twinder.View"
		
		Closed="Window_Closed"
		WindowStartupLocation="CenterScreen"
		
		MinHeight="400" MinWidth="500"
		Height="600" Width="600"
        
		Title="{x:Static p:Resources.app_title}"
        DataContext="{Binding Main, Source={StaticResource Locator}}"
		d:DataContext="{Binding SampleMain, Source={StaticResource Locator}}">

	<Window.InputBindings>
		<KeyBinding Key="Return" 
					Command="{Binding OpenChatCommand}"
					CommandParameter="{Binding ElementName=matchList, Path=SelectedItem}"/>
		<KeyBinding Key="Return" Modifiers="Ctrl"
					Command="{Binding OpenMatchProfileCommand}"
					CommandParameter="{Binding ElementName=matchList, Path=SelectedItem}"/>
		<KeyBinding Key="Delete"
					Command="{Binding UnmatchCommand}"
					CommandParameter="{Binding ElementName=matchList, Path=SelectedItem}"/>
	</Window.InputBindings>

	<DockPanel LastChildFill="True">
		<!-- Menu bar -->
		<Menu DockPanel.Dock="Top">

			<!-- Twinder -->
			<MenuItem Header="{x:Static p:Resources.menu_app}">
				<MenuItem Header="{x:Static p:Resources.menu_tools_switch_account}"
						  Command="{Binding SwitchAccountCommand}"/>
				<MenuItem Header="{x:Static p:Resources.force_matches}"
						  Command="{Binding ForceDownloadMatchesCommand}"/>
				<MenuItem Header="{x:Static p:Resources.force_matches_full}"
						  Command="{Binding ForceDownloadMatchesFullCommand}"/>
				<MenuItem Header="{x:Static p:Resources.force_recs}"
						  Command="{Binding ForceDownloadRecsCommand}"/>

				<Separator/>

				<MenuItem Header="{x:Static p:Resources.menu_app_exit}"
						  Command="{Binding ExitCommand}"/>
			</MenuItem>

			<!-- Tools -->
			<MenuItem Header="{x:Static p:Resources.menu_tools}">
			</MenuItem>

			<!-- Help -->
			<MenuItem Header="{x:Static p:Resources.menu_help}">
				<MenuItem Header="{x:Static p:Resources.menu_help_about}"
						  Command="{Binding AboutCommand}"/>
			</MenuItem>
		</Menu>

		<!-- Status bar-->
		<StatusBar DockPanel.Dock="Bottom" Padding="5, 0">

			<!-- Match count -->
			<StatusBarItem Name="matchCount_StatusBarItem">

				<TextBlock Name="matchCountOk_TextBlock">
					<TextBlock.Text>
						<MultiBinding StringFormat="{}{0} {1}">
							<Binding Path="FilterVM.SelectedCount" FallbackValue="0"/>
							<Binding ElementName="MatchTabs" Path="SelectedItem.Header"/>
						</MultiBinding>
					</TextBlock.Text>
				</TextBlock>

			</StatusBarItem>

			<Separator Style="{StaticResource StatusBarSeperator}"/>

			<!-- Filtered count -->
			<StatusBarItem>

				<TextBlock>
					<TextBlock.Text>
						<MultiBinding StringFormat="{}{0} {1}">
							<Binding Path="FilterVM.FilteredCount" FallbackValue="0"/>
							<Binding Source="{x:Static p:Resources.statusbar_filtered_count}"/>
						</MultiBinding>
					</TextBlock.Text>
				</TextBlock>

			</StatusBarItem>

			<Separator Style="{StaticResource StatusBarSeperator}"/>

			<!-- Recommendations count -->
			<StatusBarItem Name="recCount_StatusBarItem">

				<TextBlock Name="recCountOk_TextBlock">
					<TextBlock.Text>
						<MultiBinding StringFormat="{}{0} {1}">
							<Binding Path="RecList.Count" FallbackValue="0"/>
							<Binding Source="{x:Static p:Resources.statusbar_rec_count}"/>
						</MultiBinding>
					</TextBlock.Text>
				</TextBlock>
				
			</StatusBarItem>

			<!-- Autherization status -->
			<StatusBarItem HorizontalAlignment="Right">
				<StackPanel Orientation="Horizontal">
					
					<ProgressBar Name="connection_ProgressBar"
								 Visibility="{Binding IsConnecting, Converter={StaticResource BoolToVisibleConverter}}"
								 IsIndeterminate="True"
								 Width="50" Height="10"
								 Margin="5,0"/>

					<TextBlock Name="connection_TextBlock"
							   Text="{Binding ConnectionStatus}"/>
					

				</StackPanel>
			</StatusBarItem>

		</StatusBar>

		<Grid Name="LayoutRoot" Background="#f0f0f0">
			<Grid.RowDefinitions>
				<RowDefinition Height="auto"/>
				<RowDefinition Height="*"/>
			</Grid.RowDefinitions>

			<!--Toolbar-->
			<Grid Background="#f0f0f0">
				<Grid.RowDefinitions>
					<RowDefinition Height="auto"/>
					<RowDefinition Height="auto"/>
					<RowDefinition Height="auto"/>
					<RowDefinition Height="auto"/>
				</Grid.RowDefinitions>
				
				<!-- Toolbar -->
				<StackPanel Grid.Row="0"
							Orientation="Horizontal"
							HorizontalAlignment="Center">
					<StackPanel.Resources>
						<Style TargetType="Button">
							<Setter Property="Width" Value="110"/>
							<Setter Property="Margin" Value="2"/>
						</Style>
					</StackPanel.Resources>

					<Button Command="{Binding OpenRecsCommand}">
						<StackPanel>
							<Image Source="{StaticResource icon_recs}" Height="25"/>
							<TextBlock Text="{x:Static p:Resources.command_open_recommendations}"/>
						</StackPanel>
					</Button>

					<Button Command="{Binding SetLocationCommand}">
						<StackPanel>
							<Image Source="{StaticResource icon_location}" Height="25"/>
							<TextBlock Text="{x:Static p:Resources.command_set_location}"/>
						</StackPanel>
					</Button>

					<Button Command="{Binding OpenUserProfileCommand}">
						<StackPanel>
							<Image Source="{StaticResource icon_user}" Height="25"/>
							<TextBlock Text="{x:Static p:Resources.command_user_profile}"/>
						</StackPanel>
					</Button>
				</StackPanel>

				<!-- Search box -->
				<Grid Grid.Row="1" Margin="5">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="170"/>
						<ColumnDefinition Width="auto"/>
					</Grid.ColumnDefinitions>

					<!-- Search box -->
					<Grid Grid.Row="0"
						  Background="White">

						<TextBox Text="{Binding FilterVM.NameFilter, UpdateSourceTrigger=PropertyChanged}"
								 Padding="3">
							<TextBox.Style>
								<Style TargetType="TextBox">
									<Style.Resources>
										<VisualBrush x:Key="CueBannerBrush"
													 AlignmentX="Left" AlignmentY="Center"
													 Stretch="None">
											<VisualBrush.Visual>
												<Label Content="{x:Static p:Resources.filter_name_hint}"
													   Foreground="LightGray" 
													   Padding="3"/>
											</VisualBrush.Visual>
										</VisualBrush>
									</Style.Resources>
									<Style.Triggers>
										<Trigger Property="Text" Value="">
											<Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
										</Trigger>
										<Trigger Property="Text" Value="{x:Null}">
											<Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
										</Trigger>
										<Trigger Property="IsKeyboardFocused" Value="True">
											<Setter Property="Background" Value="White" />
										</Trigger>
									</Style.Triggers>
								</Style>
							</TextBox.Style>
						</TextBox>

						<Label HorizontalAlignment="Right" VerticalAlignment="Center">
							<Image Source="{StaticResource icon_x}"
								   Width="12" Height="12"
								   Opacity="0.4"/>

							<Label.InputBindings>
								<MouseBinding Command="{Binding ClearSearchCommand}" MouseAction="LeftClick" />
							</Label.InputBindings>
						</Label>
					</Grid>

					<!-- Sorting -->
					<ComboBox Grid.Column="1"
							  Margin="5,0"
							  ItemsSource="{Binding FilterVM.SortingOptions}"
							  SelectedItem="{Binding FilterVM.SelectedSorting, Converter={StaticResource MatchSortingConverter}, Mode=TwoWay}"
							  SelectedIndex="1">

						<ComboBox.ItemTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding Path=., Converter={StaticResource MatchSortingConverter}}" />
							</DataTemplate>
						</ComboBox.ItemTemplate>
					</ComboBox>

					<!-- More filtering -->
					<Label Grid.Column="2" HorizontalAlignment="Right" Padding="4">
						<Label.InputBindings>
							<MouseBinding MouseAction="LeftClick" Command="{Binding FilterVM.ShowMoreFilteringCommand}"/>
						</Label.InputBindings>

						<StackPanel Orientation="Horizontal">
							<TextBlock Text="{x:Static p:Resources.filter_show_filters}"
									   Margin="5,0"/>
							<Image Height="12">
								<Image.Style>
									<Style TargetType="{x:Type Image}">
										<Style.Triggers>
											<DataTrigger Binding="{Binding FilterVM.ShowMoreFiltering}" Value="True">
												<Setter Property="Source" Value="{StaticResource icon_expand_up}"/>
											</DataTrigger>
											<DataTrigger Binding="{Binding FilterVM.ShowMoreFiltering}" Value="False">
												<Setter Property="Source" Value="{StaticResource icon_expand_down}"/>
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</Image.Style>
							</Image>

						</StackPanel>

					</Label>
				</Grid>


				<!-- Quick filters  -->
				<Grid Grid.Row="2" Margin="5,2,5,5" DataContext="{Binding FilterVM}">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="*"/>
					</Grid.ColumnDefinitions>

					<RadioButton Content="{x:Static p:Resources.filter_messages_all}"
								 IsChecked="{Binding MessagedFilter, Mode=TwoWay,
									Converter={StaticResource FilterMessagedConverter},
									ConverterParameter='All'}"
								 Grid.Column="0"/>
					
					<RadioButton Content="{x:Static p:Resources.filter_messages_yes}"
								 IsChecked="{Binding MessagedFilter, Mode=TwoWay,
									Converter={StaticResource FilterMessagedConverter},
									ConverterParameter='Messaged'}"
								 Grid.Column="1"/>
					
					<RadioButton Content="{x:Static p:Resources.filter_messages_not}"
								 IsChecked="{Binding MessagedFilter, Mode=TwoWay,
									Converter={StaticResource FilterMessagedConverter},
									ConverterParameter='NotMessaged'}"
								 Grid.Column="2"/>
					
					<CheckBox Content="{x:Static p:Resources.filter_only_new}"
							  HorizontalAlignment="Right"
							  IsChecked="{Binding OnlyNewMatches}"
							  Grid.Column="4"/>

				</Grid>
				
				<!-- Filter menu -->
				<view:MatchListFilterView Grid.Row="3" DataContext="{Binding FilterVM}"/>
			</Grid>

			<TabControl x:Name="MatchTabs" Grid.Row="1" Margin="1,0"
						SelectedItem="{Binding FilterVM.SelectedTab}">
				<TabControl.Resources>
					<Style TargetType="ListView">
						<Setter Property="BorderThickness" Value="0"/>
						<Setter Property="HorizontalAlignment" Value="Stretch"/>
						<Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel"/>
						<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
					</Style>
				</TabControl.Resources>

				<TabItem Header="{x:Static p:Resources.main_tab_matches}">
					<ListView Name="matchList"
							  ItemsSource="{Binding MatchListCvs.View}">
						<ListView.Resources>
							<Style TargetType="ListViewItem">
								<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
							</Style>

							<ContextMenu x:Key="Context menu">
								<MenuItem Header="{x:Static p:Resources.match_context_menu_open_chat}"
								  Command="{Binding DataContext.OpenChatCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}}"
								  CommandParameter="{Binding}"
								  InputGestureText="Enter"/>
								<MenuItem Header="{x:Static p:Resources.match_context_menu_open_profile}"
								  Command="{Binding DataContext.OpenMatchProfileCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}}"
								  CommandParameter="{Binding}"
								  InputGestureText="Ctrl+Enter"/>

								<MenuItem Header="{x:Static p:Resources.match_context_menu_download_full}"
								  Command="{Binding DataContext.DownloadMatchDataCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}}"
								  CommandParameter="{Binding}"/>

								<Separator/>

								<MenuItem Header="{x:Static p:Resources.match_context_menu_open_folder}"
								  Command="{Binding DataContext.OpenFolderCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"
								  CommandParameter="{Binding}"/>

								<MenuItem Header="{x:Static p:Resources.match_context_menu_unmatch}"
								  Command="{Binding DataContext.UnmatchCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"
								  CommandParameter="{Binding}"
								  InputGestureText="Delete"/>
							</ContextMenu>

						</ListView.Resources>

						<ListView.ItemTemplate>
							<DataTemplate>
								<view:MatchListItemView DirPath="Matches"
														Width="{Binding ElementName=MatchTabs, Path=ActualWidth}"/>
							</DataTemplate>
						</ListView.ItemTemplate>

						<ListView.ItemContainerStyle>
							<Style TargetType="ListViewItem">
								<Setter Property="ContextMenu" Value="{StaticResource Context menu}"/>
								<EventSetter Event="MouseDoubleClick" Handler="matchList_OnMouseDoubleClick"/>
							</Style>
						</ListView.ItemContainerStyle>
					</ListView>

				</TabItem>

				<TabItem Header="{x:Static p:Resources.main_tab_unmatched_me}">
					<ListView Name="UnmatchedList"
							  ItemsSource="{Binding UnmatchedMeListCvs.View}">
						<ListView.Resources>
							<Style TargetType="ListViewItem">
								<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
							</Style>

							<ContextMenu x:Key="Context menu">
								<MenuItem Header="{x:Static p:Resources.match_context_menu_open_chat}"
								  Command="{Binding DataContext.OpenChatCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}}"
								  CommandParameter="{Binding}"
								  InputGestureText="Enter"/>
								<MenuItem Header="{x:Static p:Resources.match_context_menu_open_profile}"
								  Command="{Binding DataContext.OpenMatchProfileCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}}"
								  CommandParameter="{Binding}"
								  InputGestureText="Ctrl+Enter"/>

								<Separator/>

								<MenuItem Header="{x:Static p:Resources.match_context_menu_open_folder}"
								  Command="{Binding DataContext.OpenFolderCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"
								  CommandParameter="{Binding}"/>

							</ContextMenu>

						</ListView.Resources>

						<ListView.ItemTemplate>
							<DataTemplate>
								<view:MatchListItemView DirPath="Matches-Unmatched"
														Width="{Binding ElementName=MatchTabs, Path=ActualWidth}"/>
							</DataTemplate>
						</ListView.ItemTemplate>

						<ListView.ItemContainerStyle>
							<Style TargetType="ListViewItem">
								<Setter Property="ContextMenu" Value="{StaticResource Context menu}"/>
								<EventSetter Event="MouseDoubleClick" Handler="matchList_OnMouseDoubleClick"/>
							</Style>
						</ListView.ItemContainerStyle>
					</ListView>

				</TabItem>

				<TabItem Header="{x:Static p:Resources.main_tab_unmatched_by_me}">
					<ListView Name="UnmatchedByMeList"
							  ItemsSource="{Binding UnmatchedByMeListCvs.View}">
						<ListView.Resources>
							<Style TargetType="ListViewItem">
								<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
							</Style>

							<ContextMenu x:Key="Context menu">
								<MenuItem Header="{x:Static p:Resources.match_context_menu_open_chat}"
								  Command="{Binding DataContext.OpenChatCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}}"
								  CommandParameter="{Binding}"
								  InputGestureText="Enter"/>
								<MenuItem Header="{x:Static p:Resources.match_context_menu_open_profile}"
								  Command="{Binding DataContext.OpenMatchProfileCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}}"
								  CommandParameter="{Binding}"
								  InputGestureText="Ctrl+Enter"/>

								<Separator/>

								<MenuItem Header="{x:Static p:Resources.match_context_menu_open_folder}"
								  Command="{Binding DataContext.OpenFolderCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"
								  CommandParameter="{Binding}"/>

							</ContextMenu>

						</ListView.Resources>

						<ListView.ItemTemplate>
							<DataTemplate>
								<view:MatchListItemView DirPath="Matches-Unmatched-By-Me"
														Width="{Binding ElementName=MatchTabs, Path=ActualWidth}"/>
							</DataTemplate>
						</ListView.ItemTemplate>

						<ListView.ItemContainerStyle>
							<Style TargetType="ListViewItem">
								<Setter Property="ContextMenu" Value="{StaticResource Context menu}"/>
								<EventSetter Event="MouseDoubleClick" Handler="matchList_OnMouseDoubleClick"/>
							</Style>
						</ListView.ItemContainerStyle>
					</ListView>

				</TabItem>
				
				<TabItem Header="{x:Static p:Resources.main_tab_recs_pending}">
					<ListView Name="RecommendationsPending"
							  ItemsSource="{Binding RecommendationsPendingCvs.View}">
						<ListView.Resources>
							<Style TargetType="ListViewItem">
								<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
							</Style>

							<ContextMenu x:Key="Context menu">

								<MenuItem Header="{x:Static p:Resources.match_context_menu_open_profile}"
								  Command="{Binding DataContext.OpenMatchProfileCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}}"
								  CommandParameter="{Binding}"
								  InputGestureText="Ctrl+Enter"/>

								<Separator/>

								<MenuItem Header="{x:Static p:Resources.match_context_menu_open_folder}"
								  Command="{Binding DataContext.OpenFolderCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"
								  CommandParameter="{Binding}"/>

							</ContextMenu>

						</ListView.Resources>

						<ListView.ItemTemplate>
							<DataTemplate>
								<view:MatchListItemView DirPath="Recommendations-Pending"
														Width="{Binding ElementName=MatchTabs, Path=ActualWidth}"/>
							</DataTemplate>
						</ListView.ItemTemplate>

						<ListView.ItemContainerStyle>
							<Style TargetType="ListViewItem">
								<Setter Property="ContextMenu" Value="{StaticResource Context menu}"/>
							</Style>
						</ListView.ItemContainerStyle>
					</ListView>

				</TabItem>
				
				<TabItem Header="{x:Static p:Resources.main_tab_recs_passed}">
					<ListView Name="RecommendationsPassed"
							  ItemsSource="{Binding RecommendationsPassedCvs.View}">
						<ListView.Resources>
							<Style TargetType="ListViewItem">
								<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
							</Style>

							<ContextMenu x:Key="Context menu">

								<MenuItem Header="{x:Static p:Resources.match_context_menu_open_profile}"
								  Command="{Binding DataContext.OpenMatchProfileCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}}"
								  CommandParameter="{Binding}"
								  InputGestureText="Ctrl+Enter"/>

								<Separator/>

								<MenuItem Header="{x:Static p:Resources.match_context_menu_open_folder}"
								  Command="{Binding DataContext.OpenFolderCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"
								  CommandParameter="{Binding}"/>

							</ContextMenu>

						</ListView.Resources>

						<ListView.ItemTemplate>
							<DataTemplate>
								<view:MatchListItemView DirPath="Recommendations-Passed"
														Width="{Binding ElementName=MatchTabs, Path=ActualWidth}"/>
							</DataTemplate>
						</ListView.ItemTemplate>

						<ListView.ItemContainerStyle>
							<Style TargetType="ListViewItem">
								<Setter Property="ContextMenu" Value="{StaticResource Context menu}"/>
							</Style>
						</ListView.ItemContainerStyle>
					</ListView>

				</TabItem>
			</TabControl>
		</Grid>

	</DockPanel>

</Window>
