<Window x:Class="Twinder.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
		
		xmlns:p="clr-namespace:Twinder.Properties"
		xmlns:view="clr-namespace:Twinder.View"
		
		Closed="Window_Closed"
		WindowStartupLocation="CenterScreen"
		
		MinHeight="400" MinWidth="500"
		Height="500" Width="550"
        
		Title="{x:Static p:Resources.app_title}"
        DataContext="{Binding Main, Source={StaticResource Locator}}"
		d:DataContext="{Binding SampleMain, Source={StaticResource Locator}}">

	<Window.InputBindings>
		<KeyBinding Key="Return" 
					Command="{Binding OpenChatCommand}"
					CommandParameter="{Binding ElementName=matchList, Path=SelectedItem}"/>
		<KeyBinding Key="Return" Modifiers="Ctrl"
					Command="{Binding OpenMatchProfileCommand}"
					CommandParameter="{Binding ElementName=matchList, Path=SelectedItem}"/>
		<KeyBinding Key="Delete"
					Command="{Binding UnmatchCommand}"
					CommandParameter="{Binding ElementName=matchList, Path=SelectedItem}"/>
	</Window.InputBindings>

	<DockPanel LastChildFill="True">
		<!-- Menu bar -->
		<Menu DockPanel.Dock="Top">

			<!-- Twinder -->
			<MenuItem Header="{x:Static p:Resources.menu_app}">
				<MenuItem Header="{x:Static p:Resources.menu_app_exit}"
						  Command="{Binding ExitCommand}"/>
			</MenuItem>

			<!-- Tools -->
			<MenuItem Header="{x:Static p:Resources.menu_tools}">
				<MenuItem Header="{x:Static p:Resources.menu_tools_login}"
						  Command="{Binding LoginCommand}"/>
				<MenuItem Header="{x:Static p:Resources.menu_tools_force_matches}"
						  Command="{Binding ForceDownloadMatchesCommand}"/>
				<MenuItem Header="{x:Static p:Resources.menu_tools_force_recs}"
						  Command="{Binding ForceDownloadRecsCommand}"/>
			</MenuItem>

			<!-- Help -->
			<MenuItem Header="{x:Static p:Resources.menu_help}">
				<MenuItem Header="{x:Static p:Resources.menu_help_about}"
						  Command="{Binding AboutCommand}"/>
			</MenuItem>
		</Menu>

		<!-- Status bar-->
		<StatusBar DockPanel.Dock="Bottom" Padding="5, 0">

			<StatusBar.Resources>
				<Style TargetType="ProgressBar" BasedOn="{StaticResource StatusBarProgressBar}"/>
			</StatusBar.Resources>
			
			<!-- Autherization status -->
			<StatusBarItem>
				<StackPanel Orientation="Horizontal">
					
					<ProgressBar Name="connection_ProgressBar"/>
					
					<TextBlock Name="connection_TextBlock"
							   Text="{x:Static p:Resources.tinder_auth_connecting}"/>

				</StackPanel>
			</StatusBarItem>

			<Separator Visibility="{Binding Visibility, ElementName=matchCount_StatusBarItem}"
					   Style="{StaticResource StatusBarSeperator}"/>

			<!-- Match count -->
			<StatusBarItem Name="matchCount_StatusBarItem"
						   Visibility="Collapsed">
				<StackPanel Orientation="Horizontal">
					
					<TextBlock Name="matchCountOk_TextBlock">
						<TextBlock.Text>
							<MultiBinding StringFormat="{}{0} {1}">
								<Binding Path="MatchList.Count"/>
								<Binding Source="{x:Static p:Resources.statusbar_match_count}"/>
							</MultiBinding>
						</TextBlock.Text>
					</TextBlock>

					<TextBlock Name="matchCountError_TextBlock"
							   Text="{x:Static p:Resources.tinder_update_matches_error}"
							   Visibility="Collapsed"/>


				</StackPanel>
			</StatusBarItem>

			<Separator Visibility="{Binding Visibility, ElementName=recCount_StatusBarItem}"
					   Style="{StaticResource StatusBarSeperator}"/>

			<!-- Recommendations count -->
			<StatusBarItem Name="recCount_StatusBarItem"
						   Visibility="Collapsed">
				<StackPanel Orientation="Horizontal">

					<TextBlock Name="recCountOk_TextBlock">
						<TextBlock.Text>
							<MultiBinding StringFormat="{}{0} {1}">
								<Binding Path="RecList.Count"/>
								<Binding Source="{x:Static p:Resources.statusbar_rec_count}"/>
							</MultiBinding>
						</TextBlock.Text>
					</TextBlock>

					<TextBlock Name="recCountExhausted_TextBlock"
							   Text="{x:Static p:Resources.tinder_recs_exchausted}"
							   Visibility="Collapsed"/>
					
					<TextBlock Name="recCountError_TextBlock"
							   Text="{x:Static p:Resources.tinder_recs_error}"
							   Visibility="Collapsed"/>

				</StackPanel>
			</StatusBarItem>

			<Separator Visibility="{Binding Visibility, ElementName=recCount_StatusBarItem}"
					   Style="{StaticResource StatusBarSeperator}"/>


			<!-- Filtered count -->
			<StatusBar>
				<StackPanel Orientation="Horizontal">

					<TextBlock >
						<TextBlock.Text>
							<MultiBinding StringFormat="{}{0} {1}">
								<Binding Path="FilteredMatchListCount"/>
								<Binding Source="{x:Static p:Resources.statusbar_filtered_count}"/>
							</MultiBinding>
						</TextBlock.Text>
					</TextBlock>
				</StackPanel>

			</StatusBar>
		</StatusBar>

		<Grid Name="LayoutRoot">
			<Grid.RowDefinitions>
				<RowDefinition Height="auto"/>
				<RowDefinition Height="*"/>
			</Grid.RowDefinitions>

			<!--Toolbar-->
			<Grid Background="#f0f0f0">
				<Grid.RowDefinitions>
					<RowDefinition Height="auto"/>
					<RowDefinition Height="auto"/>
					<RowDefinition Height="auto"/>
				</Grid.RowDefinitions>
				
				<!-- Toolbar -->
				<StackPanel Grid.Row="0"
							Orientation="Horizontal"
							HorizontalAlignment="Center">
					<StackPanel.Resources>
						<Style TargetType="Button">
							<Setter Property="Width" Value="110"/>
							<Setter Property="Margin" Value="2"/>
						</Style>
					</StackPanel.Resources>

					<Button Command="{Binding OpenRecsCommand}">
						<StackPanel>
							<Image Source="{StaticResource icon_recs}" Height="25"/>
							<TextBlock Text="{x:Static p:Resources.command_open_recommendations}"/>
						</StackPanel>
					</Button>

					<Button Command="{Binding SetLocationCommand}">
						<StackPanel>
							<Image Source="{StaticResource icon_location}" Height="25"/>
							<TextBlock Text="{x:Static p:Resources.command_set_location}"/>
						</StackPanel>
					</Button>

					<Button Command="{Binding OpenUserProfileCommand}">
						<StackPanel>
							<Image Source="{StaticResource icon_user}" Height="25"/>
							<TextBlock Text="{x:Static p:Resources.command_user_profile}"/>
						</StackPanel>
					</Button>
				</StackPanel>
				
				<!-- Search box -->
				<Grid Grid.Row="1" Margin="5">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="auto"/>
					</Grid.ColumnDefinitions>

					<!-- Search box -->
					<Grid Grid.Row="0"
						  Background="White">
						
						<TextBox Text="{Binding NameFilter, UpdateSourceTrigger=PropertyChanged}"
								 Padding="3">
							<TextBox.Style>
								<Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
									<Style.Resources>
										<VisualBrush x:Key="CueBannerBrush"
													 AlignmentX="Left" AlignmentY="Center"
													 Stretch="None">
											<VisualBrush.Visual>
												<Label Content="{x:Static p:Resources.filter_name_hint}"
													   Foreground="LightGray" 
													   Padding="3"/>
											</VisualBrush.Visual>
										</VisualBrush>
									</Style.Resources>
									<Style.Triggers>
										<Trigger Property="Text" Value="">
											<Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
										</Trigger>
										<Trigger Property="Text" Value="{x:Null}">
											<Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
										</Trigger>
										<Trigger Property="IsKeyboardFocused" Value="True">
											<Setter Property="Background" Value="White" />
										</Trigger>
									</Style.Triggers>
								</Style>
							</TextBox.Style>
						</TextBox>
						
					</Grid>
					
					<!-- More filtering -->
					<Label Grid.Column="1" HorizontalAlignment="Right" Padding="4">
						<Label.InputBindings>
							<MouseBinding MouseAction="LeftClick" Command="{Binding ShowMoreFilteringCommand}"/>
						</Label.InputBindings>
						
						<StackPanel Orientation="Horizontal">
							<TextBlock Text="{x:Static p:Resources.filter_show_filters}"
									   Margin="5,0"/>
							<Image Height="12">
								<Image.Style>
									<Style TargetType="{x:Type Image}">
										<Style.Triggers>
											<DataTrigger Binding="{Binding ShowMoreFiltering}" Value="True">
												<Setter Property="Source" Value="{StaticResource icon_expand_up}"/>
											</DataTrigger>
											<DataTrigger Binding="{Binding ShowMoreFiltering}" Value="False">
												<Setter Property="Source" Value="{StaticResource icon_expand_down}"/>
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</Image.Style>
							</Image>

						</StackPanel>
						
					</Label>
				</Grid>
				
				<!-- Filter menu -->
				<Grid Grid.Row="2"
					  Visibility="{Binding ShowMoreFiltering, Converter={StaticResource BoolToVisibleConverter}}">
					<Grid.RowDefinitions>
						<RowDefinition Height="auto"/>
						<RowDefinition Height="auto"/>
						<RowDefinition Height="auto"/>
					</Grid.RowDefinitions>

					<Grid.Resources>
						<Style TargetType="GroupBox">
							<Setter Property="Padding" Value="3"/>
							<Setter Property="Margin" Value="5,0,5,5"/>
						</Style>
					</Grid.Resources>

					<!-- With description or not -->
					<GroupBox Header="{x:Static p:Resources.filter_description_header}"
							  Grid.Row="0">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="auto"/>
								<RowDefinition Height="auto"/>
							</Grid.RowDefinitions>

							<RadioButton Content="{x:Static p:Resources.filter_description_with_bio}"
										 IsChecked="{Binding DescriptionFilter, Mode=TwoWay,
											Converter={StaticResource FilterDescriptionConverter},
											ConverterParameter='WithDescription'}"
											 Grid.Column="0" Grid.Row="0"
										 Margin="0,5"/>
							<RadioButton Content="{x:Static p:Resources.filter_description_without_bio}"
										 IsChecked="{Binding DescriptionFilter, Mode=TwoWay,
											Converter={StaticResource FilterDescriptionConverter},
											ConverterParameter='WithoutDescription'}"
											 Grid.Column="1" Grid.Row="0"
										 Margin="0,5"/>
							<RadioButton Content="{x:Static p:Resources.filter_description_both}"
										 IsChecked="{Binding DescriptionFilter, Mode=TwoWay,
											Converter={StaticResource FilterDescriptionConverter},
											ConverterParameter='Both'}"
											 Grid.Column="2" Grid.Row="0"
										 Margin="0,5"/>

							<Grid Grid.Row="1" Grid.ColumnSpan="3"
								  Margin="0,5,0,0">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="auto"/>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="auto"/>
								</Grid.ColumnDefinitions>
								
								<TextBlock Text="{Binding Source={x:Static p:Resources.filter_description_includes}}"
										   Grid.Column="0"
										   VerticalAlignment="Center"/>
								
								<TextBox Text="{Binding DescriptionWordFilter, UpdateSourceTrigger=PropertyChanged}"
										 Grid.Column="1"
										 Padding="3,2"
										 Margin="5,0"/>

								<CheckBox IsChecked="{Binding DescriptionWholeWordsFilter}"
										  Content="{Binding Source={x:Static p:Resources.filter_whole_words}}"
										  Grid.Column="2"
										  VerticalAlignment="Center"/>
							</Grid>

						</Grid>
					</GroupBox>
					
					<!-- Age and Gender -->
					<Grid Grid.Row="2">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>

						<!-- Age -->
						<GroupBox Header="{x:Static p:Resources.filter_age_header}"
							  Grid.Column="0">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="2*"/>
									<ColumnDefinition Width="10"/>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="2*"/>
								</Grid.ColumnDefinitions>

								<TextBlock Text="{x:Static p:Resources.filter_age_min_age}"
									   Grid.Column="0"
									   VerticalAlignment="Center"/>


								<TextBox Text="{Binding MinAgeFilter, UpdateSourceTrigger=PropertyChanged, TargetNullValue=''}"
										 Grid.Column="1"
										 Padding="2,2"
										 VerticalAlignment="Center"/>
								
								<TextBlock Text="{x:Static p:Resources.filter_age_max_age}"
									   Grid.Column="3"
									   VerticalAlignment="Center"/>

								<TextBox Text="{Binding MaxAgeFilter, UpdateSourceTrigger=PropertyChanged, TargetNullValue=''}"
										 Grid.Column="4"
										 VerticalAlignment="Center"
										 Padding="2"/>

								<!--<Slider Value="{Binding MinAgeFilter}" Name="MinAge_Slider"
									Grid.Column="2"
									Minimum="18" Maximum="60"
									ValueChanged="MinAge_Slider_ValueChanged"
									TickFrequency="1" IsSnapToTickEnabled="True"
									VerticalAlignment="Center"/>-->


								<!--<Slider Value="{Binding MaxAgeFilter}" Name="MaxAge_Slider"
									Grid.Column="6"
									Minimum="18" Maximum="60"
									ValueChanged="MaxAge_Slider_ValueChanged"
									TickFrequency="1" IsSnapToTickEnabled="True"
									VerticalAlignment="Center"/>-->

							</Grid>
						</GroupBox>

						<GroupBox Header="{x:Static p:Resources.filer_gender_header}"
								  Grid.Column="1">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<RadioButton Content="{x:Static p:Resources.gender_men}"
										 IsChecked="{Binding GenderFilter, Mode=TwoWay,
											Converter={StaticResource FilterGenderConverter},
											ConverterParameter='Man'}"
											 Grid.Column="0" Grid.Row="0"
										 Margin="0,5"/>
								<RadioButton Content="{x:Static p:Resources.gender_women}"
										 IsChecked="{Binding GenderFilter, Mode=TwoWay,
											Converter={StaticResource FilterGenderConverter},
											ConverterParameter='Woman'}"
											 Grid.Column="1" Grid.Row="0"
										 Margin="0,5"/>
								<RadioButton Content="{x:Static p:Resources.gender_both}"
										 IsChecked="{Binding GenderFilter, Mode=TwoWay,
											Converter={StaticResource FilterGenderConverter},
											ConverterParameter='Both'}"
											 Grid.Column="2" Grid.Row="0"
										 Margin="0,5"/>
							</Grid>

						</GroupBox>

					</Grid>

					<!-- Messages -->
					<GroupBox Header="{x:Static p:Resources.filter_messages_header}"
							  Grid.Row="1">

						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="auto"/>
								<RowDefinition Height="auto"/>
							</Grid.RowDefinitions>

							
							<!-- Message count -->
							<Grid Width="250" HorizontalAlignment="Left">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="2*"/>
									<ColumnDefinition Width="10"/>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="2*"/>
								</Grid.ColumnDefinitions>

								<TextBlock Text="{x:Static p:Resources.filter_age_min_age}"
									   Grid.Column="0"
									   VerticalAlignment="Center"/>


								<TextBox Text="{Binding MinMessagesFilter, UpdateSourceTrigger=PropertyChanged, TargetNullValue=''}"
										 Grid.Column="1"
										 Padding="2,2"
										 VerticalAlignment="Center"/>

								<TextBlock Text="{x:Static p:Resources.filter_age_max_age}"
									   Grid.Column="3"
									   VerticalAlignment="Center"/>

								<TextBox Text="{Binding MaxMessagesFilter, UpdateSourceTrigger=PropertyChanged, TargetNullValue=''}"
										 Grid.Column="4"
										 VerticalAlignment="Center"
										 Padding="2"/>
							</Grid>

							<!-- Message includes-->
							<Grid Grid.Row="1" Grid.ColumnSpan="3"
								  Margin="0,5,0,0">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="auto"/>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="auto"/>
								</Grid.ColumnDefinitions>

								<TextBlock Text="{Binding Source={x:Static p:Resources.filter_messages_includes}}"
										   Grid.Column="0"
										   VerticalAlignment="Center"/>

								<TextBox Text="{Binding MessagesWordFilter, UpdateSourceTrigger=PropertyChanged}"
										 Grid.Column="1"
										 Padding="3,2"
										 Margin="5,0"/>

								<CheckBox IsChecked="{Binding MessagesWholeWordsFilter}"
									  Content="{Binding Source={x:Static p:Resources.filter_whole_words}}"
									  Grid.Column="2"
									  VerticalAlignment="Center"/>
							</Grid>

						</Grid>
						



					</GroupBox>

				</Grid>
			</Grid>

			<!--Match list-->
			<ListView Name="matchList" Grid.Row="1" HorizontalAlignment="Stretch"
					  ItemsSource="{Binding MatchListCvs.View}" VirtualizingPanel.ScrollUnit="Pixel"
					  ScrollViewer.HorizontalScrollBarVisibility="Disabled">
				<ListView.Resources>
					<Style TargetType="ListViewItem">
						<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
					</Style>

					 <!--TODO need to implement this into the control itself somehow god damn it-->
					<ContextMenu x:Key="Context menu">
						<MenuItem Header="{x:Static p:Resources.match_context_menu_open_chat}"
								  Command="{Binding DataContext.OpenChatCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}}"
								  CommandParameter="{Binding}"
								  InputGestureText="Enter"/>
						<MenuItem Header="{x:Static p:Resources.match_context_menu_open_profile}"
								  Command="{Binding DataContext.OpenMatchProfileCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}}"
								  CommandParameter="{Binding}"
								  InputGestureText="Ctrl+Enter"/>
						<MenuItem Header="{x:Static p:Resources.match_context_menu_unmatch}"
								  Command="{Binding DataContext.UnmatchCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"
								  CommandParameter="{Binding}"
								  InputGestureText="Delete"/>
					</ContextMenu>

				</ListView.Resources>

				<ListView.ItemTemplate>
					<DataTemplate>
						<view:MatchListItemView
							Width="{Binding ElementName=matchList, Path=ActualWidth}"/>
						<!--Converter={StaticResource ScrollBarRemoverConverter}, ConverterParameter=30}"-->
					</DataTemplate>
				</ListView.ItemTemplate>

				<ListView.ItemContainerStyle>
					<Style TargetType="ListViewItem">
						<Setter Property="ContextMenu" Value="{StaticResource Context menu}"/>
						<EventSetter Event="MouseDoubleClick" Handler="matchList_OnMouseDoubleClick"/>
					</Style>
				</ListView.ItemContainerStyle>
			</ListView>
		</Grid>

	</DockPanel>

</Window>
